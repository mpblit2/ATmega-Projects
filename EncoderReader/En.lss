
En.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000049e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000040  00800060  00800060  00000512  2**0
                  ALLOC
  2 .stab         00000a14  00000000  00000000  00000514  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c13  00000000  00000000  00000f28  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_1>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__vector_2>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a0 3a       	cpi	r26, 0xA0	; 160
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 b4 00 	call	0x168	; 0x168 <main>
  74:	0c 94 4d 02 	jmp	0x49a	; 0x49a <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_1>:



//INT0 interrupt
ISR(INT0_vect )
{
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	2f 93       	push	r18
  88:	3f 93       	push	r19
  8a:	8f 93       	push	r24
  8c:	20 91 60 00 	lds	r18, 0x0060
  90:	30 91 61 00 	lds	r19, 0x0061
	if(!bit_is_clear(PIND, PD3))
  94:	83 9b       	sbis	0x10, 3	; 16
  96:	05 c0       	rjmp	.+10     	; 0xa2 <__vector_1+0x26>
	{
		LED = 0xff; //zaœwiecenie LEDów
  98:	8f ef       	ldi	r24, 0xFF	; 255
  9a:	88 bb       	out	0x18, r24	; 24
		i++;
  9c:	2f 5f       	subi	r18, 0xFF	; 255
  9e:	3f 4f       	sbci	r19, 0xFF	; 255
  a0:	03 c0       	rjmp	.+6      	; 0xa8 <__vector_1+0x2c>
	}
	else
	{
		LED = 0x00; //zgaszenie LEDów
  a2:	18 ba       	out	0x18, r1	; 24
		i--;
  a4:	21 50       	subi	r18, 0x01	; 1
  a6:	30 40       	sbci	r19, 0x00	; 0
  a8:	30 93 61 00 	sts	0x0061, r19
  ac:	20 93 60 00 	sts	0x0060, r18
	}
}
  b0:	8f 91       	pop	r24
  b2:	3f 91       	pop	r19
  b4:	2f 91       	pop	r18
  b6:	0f 90       	pop	r0
  b8:	0f be       	out	0x3f, r0	; 63
  ba:	0f 90       	pop	r0
  bc:	1f 90       	pop	r1
  be:	18 95       	reti

000000c0 <__vector_2>:
//INT1 interrupt
	ISR(INT1_vect )
	{
  c0:	1f 92       	push	r1
  c2:	0f 92       	push	r0
  c4:	0f b6       	in	r0, 0x3f	; 63
  c6:	0f 92       	push	r0
  c8:	11 24       	eor	r1, r1
  ca:	8f 93       	push	r24
		if(!bit_is_clear(PIND, PD2))
  cc:	82 9b       	sbis	0x10, 2	; 16
  ce:	03 c0       	rjmp	.+6      	; 0xd6 <__vector_2+0x16>
		{
			LED = 0xff; //zaœwiecenie LEDów
  d0:	8f ef       	ldi	r24, 0xFF	; 255
  d2:	88 bb       	out	0x18, r24	; 24
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <__vector_2+0x18>
			//i++;
		}	
		else
		{
			
			LED = 0x00; //zgaszenie LEDów
  d6:	18 ba       	out	0x18, r1	; 24
			//i--;
		}
	}
  d8:	8f 91       	pop	r24
  da:	0f 90       	pop	r0
  dc:	0f be       	out	0x3f, r0	; 63
  de:	0f 90       	pop	r0
  e0:	1f 90       	pop	r1
  e2:	18 95       	reti

000000e4 <wyswietl>:
}
return 0;
}

void wyswietl(int* liczba)
{
  e4:	fc 01       	movw	r30, r24
	switch(*liczba)
  e6:	01 90       	ld	r0, Z+
  e8:	f0 81       	ld	r31, Z
  ea:	e0 2d       	mov	r30, r0
  ec:	e4 30       	cpi	r30, 0x04	; 4
  ee:	f1 05       	cpc	r31, r1
  f0:	61 f1       	breq	.+88     	; 0x14a <wyswietl+0x66>
  f2:	e5 30       	cpi	r30, 0x05	; 5
  f4:	f1 05       	cpc	r31, r1
  f6:	7c f4       	brge	.+30     	; 0x116 <wyswietl+0x32>
  f8:	e1 30       	cpi	r30, 0x01	; 1
  fa:	f1 05       	cpc	r31, r1
  fc:	01 f1       	breq	.+64     	; 0x13e <wyswietl+0x5a>
  fe:	e2 30       	cpi	r30, 0x02	; 2
 100:	f1 05       	cpc	r31, r1
 102:	1c f4       	brge	.+6      	; 0x10a <wyswietl+0x26>
 104:	ef 2b       	or	r30, r31
 106:	c9 f0       	breq	.+50     	; 0x13a <wyswietl+0x56>
 108:	2c c0       	rjmp	.+88     	; 0x162 <wyswietl+0x7e>
 10a:	e2 30       	cpi	r30, 0x02	; 2
 10c:	f1 05       	cpc	r31, r1
 10e:	c9 f0       	breq	.+50     	; 0x142 <wyswietl+0x5e>
 110:	33 97       	sbiw	r30, 0x03	; 3
 112:	39 f5       	brne	.+78     	; 0x162 <wyswietl+0x7e>
 114:	18 c0       	rjmp	.+48     	; 0x146 <wyswietl+0x62>
 116:	e7 30       	cpi	r30, 0x07	; 7
 118:	f1 05       	cpc	r31, r1
 11a:	e9 f0       	breq	.+58     	; 0x156 <wyswietl+0x72>
 11c:	e8 30       	cpi	r30, 0x08	; 8
 11e:	f1 05       	cpc	r31, r1
 120:	34 f4       	brge	.+12     	; 0x12e <wyswietl+0x4a>
 122:	e5 30       	cpi	r30, 0x05	; 5
 124:	f1 05       	cpc	r31, r1
 126:	99 f0       	breq	.+38     	; 0x14e <wyswietl+0x6a>
 128:	36 97       	sbiw	r30, 0x06	; 6
 12a:	d9 f4       	brne	.+54     	; 0x162 <wyswietl+0x7e>
 12c:	12 c0       	rjmp	.+36     	; 0x152 <wyswietl+0x6e>
 12e:	e8 30       	cpi	r30, 0x08	; 8
 130:	f1 05       	cpc	r31, r1
 132:	99 f0       	breq	.+38     	; 0x15a <wyswietl+0x76>
 134:	39 97       	sbiw	r30, 0x09	; 9
 136:	a9 f4       	brne	.+42     	; 0x162 <wyswietl+0x7e>
 138:	12 c0       	rjmp	.+36     	; 0x15e <wyswietl+0x7a>
	{
		case 0: PORTC = 0X03;
 13a:	83 e0       	ldi	r24, 0x03	; 3
 13c:	13 c0       	rjmp	.+38     	; 0x164 <wyswietl+0x80>
				break;
				
		case 1: PORTC = 0X9F;
 13e:	8f e9       	ldi	r24, 0x9F	; 159
 140:	11 c0       	rjmp	.+34     	; 0x164 <wyswietl+0x80>
				break;
				
		case 2: PORTC = 0X25;
 142:	85 e2       	ldi	r24, 0x25	; 37
 144:	0f c0       	rjmp	.+30     	; 0x164 <wyswietl+0x80>
				break;
				
		case 3: PORTC = 0X0D;
 146:	8d e0       	ldi	r24, 0x0D	; 13
 148:	0d c0       	rjmp	.+26     	; 0x164 <wyswietl+0x80>
				break;
				
		case 4: PORTC = 0X99;
 14a:	89 e9       	ldi	r24, 0x99	; 153
 14c:	0b c0       	rjmp	.+22     	; 0x164 <wyswietl+0x80>
				break;
				
		case 5: PORTC = 0X49;
 14e:	89 e4       	ldi	r24, 0x49	; 73
 150:	09 c0       	rjmp	.+18     	; 0x164 <wyswietl+0x80>
				break;
		
		case 6: PORTC = 0X41;
 152:	81 e4       	ldi	r24, 0x41	; 65
 154:	07 c0       	rjmp	.+14     	; 0x164 <wyswietl+0x80>
				break;
		
		case 7: PORTC = 0X1F;
 156:	8f e1       	ldi	r24, 0x1F	; 31
 158:	05 c0       	rjmp	.+10     	; 0x164 <wyswietl+0x80>
				break;
		
		case 8: PORTC = 0X01;
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	03 c0       	rjmp	.+6      	; 0x164 <wyswietl+0x80>
				break;
		
		case 9: PORTC = 0X09;
 15e:	89 e0       	ldi	r24, 0x09	; 9
 160:	01 c0       	rjmp	.+2      	; 0x164 <wyswietl+0x80>
				break;
				
		default: PORTC = 0XFF;
 162:	8f ef       	ldi	r24, 0xFF	; 255
 164:	85 bb       	out	0x15, r24	; 21
 166:	08 95       	ret

00000168 <main>:
void proces1(int* p);
void proces2(int* p);


int main(void)
{
 168:	8f 92       	push	r8
 16a:	9f 92       	push	r9
 16c:	af 92       	push	r10
 16e:	bf 92       	push	r11
 170:	cf 92       	push	r12
 172:	df 92       	push	r13
 174:	ef 92       	push	r14
 176:	ff 92       	push	r15
 178:	0f 93       	push	r16
 17a:	1f 93       	push	r17
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
int *pint;


pint = &i;

DDRC = 0xFF;					// wyœwietlacze 7-segmentowe
 180:	9f ef       	ldi	r25, 0xFF	; 255
 182:	94 bb       	out	0x14, r25	; 20
PORTC = 0xFF;
 184:	95 bb       	out	0x15, r25	; 21
//DDRD = 0xFF;					// wybor wyswietlacza
//PORTD = 0XFF;

DDRB = 0xff; //konfiguracja portu jako wyjœcia
 186:	97 bb       	out	0x17, r25	; 23
/* set PD2 and PD3 as input */
//DDRD &=~ (1 << PD2);	/* PD2 and PD3 as input */
//DDRD &=~ (1 << PD3);
DDRD = 0xf0;
 188:	80 ef       	ldi	r24, 0xF0	; 240
 18a:	81 bb       	out	0x11, r24	; 17
PORTD = 0XFF;
 18c:	92 bb       	out	0x12, r25	; 18
PORTD |= (1 << PD3)|(1 << PD2); /* PD2 and PD3 pull-up enabled */
 18e:	82 b3       	in	r24, 0x12	; 18
 190:	8c 60       	ori	r24, 0x0C	; 12
 192:	82 bb       	out	0x12, r24	; 18
GICR |= (1<<INT0)|(1<<INT1);	/* enable INT0 and INT1 */
 194:	8b b7       	in	r24, 0x3b	; 59
 196:	80 6c       	ori	r24, 0xC0	; 192
 198:	8b bf       	out	0x3b, r24	; 59
MCUCR |= (1<<ISC01)|(1<<ISC11)|(1<<ISC10); /* INT0 - falling edge, INT1 - reising edge */
 19a:	85 b7       	in	r24, 0x35	; 53
 19c:	8e 60       	ori	r24, 0x0E	; 14
 19e:	85 bf       	out	0x35, r24	; 53
/* enable interrupt's */
sei();
 1a0:	78 94       	sei
	p2 = ((abs(i) - abs(i)/1000*1000) - (abs(i) - abs(i)/1000*1000)/100*100)/10;
	p3 = (abs(i) - abs(i)/1000*1000)/100;
	p4 = abs(i)/1000;
}

pp1 = &p1;
 1a2:	3d e7       	ldi	r19, 0x7D	; 125
 1a4:	e3 2e       	mov	r14, r19
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	f3 2e       	mov	r15, r19
			pp2 = &p2;
 1aa:	29 e7       	ldi	r18, 0x79	; 121
 1ac:	82 2e       	mov	r8, r18
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	92 2e       	mov	r9, r18
			pp3 = &p3;
 1b2:	9c e9       	ldi	r25, 0x9C	; 156
 1b4:	a9 2e       	mov	r10, r25
 1b6:	90 e0       	ldi	r25, 0x00	; 0
 1b8:	b9 2e       	mov	r11, r25
			pp4 = &p4;
 1ba:	8e e9       	ldi	r24, 0x9E	; 158
 1bc:	c8 2e       	mov	r12, r24
 1be:	80 e0       	ldi	r24, 0x00	; 0
 1c0:	d8 2e       	mov	r13, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 1c2:	00 ed       	ldi	r16, 0xD0	; 208
 1c4:	17 e0       	ldi	r17, 0x07	; 7
while(1)
{
//do nothing ;)
//_delay_ms(1);

if(abs(i)<10)
 1c6:	40 91 60 00 	lds	r20, 0x0060
 1ca:	50 91 61 00 	lds	r21, 0x0061
 1ce:	9a 01       	movw	r18, r20
 1d0:	c9 01       	movw	r24, r18
 1d2:	09 96       	adiw	r24, 0x09	; 9
 1d4:	43 97       	sbiw	r24, 0x13	; 19
 1d6:	b8 f4       	brcc	.+46     	; 0x206 <main+0x9e>
{
	p1 = abs(i);
 1d8:	40 93 7d 00 	sts	0x007D, r20
 1dc:	50 93 7e 00 	sts	0x007E, r21
 1e0:	20 91 7d 00 	lds	r18, 0x007D
 1e4:	30 91 7e 00 	lds	r19, 0x007E
 1e8:	37 ff       	sbrs	r19, 7
 1ea:	08 c0       	rjmp	.+16     	; 0x1fc <main+0x94>
 1ec:	88 27       	eor	r24, r24
 1ee:	99 27       	eor	r25, r25
 1f0:	82 1b       	sub	r24, r18
 1f2:	93 0b       	sbc	r25, r19
 1f4:	90 93 7e 00 	sts	0x007E, r25
 1f8:	80 93 7d 00 	sts	0x007D, r24
	p2 = 0;
 1fc:	10 92 7a 00 	sts	0x007A, r1
 200:	10 92 79 00 	sts	0x0079, r1
 204:	1f c0       	rjmp	.+62     	; 0x244 <main+0xdc>
	p3 = 0;
	p4 = 0;
}else if(abs(i)<100)
 206:	c9 01       	movw	r24, r18
 208:	8d 59       	subi	r24, 0x9D	; 157
 20a:	9f 4f       	sbci	r25, 0xFF	; 255
 20c:	87 3c       	cpi	r24, 0xC7	; 199
 20e:	91 05       	cpc	r25, r1
 210:	10 f5       	brcc	.+68     	; 0x256 <main+0xee>
{
	p1 = abs(i) - abs(i)/10*10;
 212:	ca 01       	movw	r24, r20
 214:	9c 01       	movw	r18, r24
 216:	97 ff       	sbrs	r25, 7
 218:	03 c0       	rjmp	.+6      	; 0x220 <main+0xb8>
 21a:	30 95       	com	r19
 21c:	21 95       	neg	r18
 21e:	3f 4f       	sbci	r19, 0xFF	; 255
 220:	c9 01       	movw	r24, r18
 222:	6a e0       	ldi	r22, 0x0A	; 10
 224:	70 e0       	ldi	r23, 0x00	; 0
 226:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__divmodhi4>
 22a:	90 93 7e 00 	sts	0x007E, r25
 22e:	80 93 7d 00 	sts	0x007D, r24
	p2 = abs(i)/10;
 232:	c9 01       	movw	r24, r18
 234:	6a e0       	ldi	r22, 0x0A	; 10
 236:	70 e0       	ldi	r23, 0x00	; 0
 238:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__divmodhi4>
 23c:	70 93 7a 00 	sts	0x007A, r23
 240:	60 93 79 00 	sts	0x0079, r22
	p3 = 0;
 244:	10 92 9d 00 	sts	0x009D, r1
 248:	10 92 9c 00 	sts	0x009C, r1
	p4 = 0;
 24c:	10 92 9f 00 	sts	0x009F, r1
 250:	10 92 9e 00 	sts	0x009E, r1
 254:	6a c0       	rjmp	.+212    	; 0x32a <main+0x1c2>
}else if(abs(i) < 1000)
 256:	c9 01       	movw	r24, r18
 258:	89 51       	subi	r24, 0x19	; 25
 25a:	9c 4f       	sbci	r25, 0xFC	; 252
 25c:	8f 5c       	subi	r24, 0xCF	; 207
 25e:	97 40       	sbci	r25, 0x07	; 7
 260:	40 f5       	brcc	.+80     	; 0x2b2 <main+0x14a>
{
	p1 = (abs(i) - abs(i)/100*100) - (abs(i) - abs(i)/100*100)/10*10;
 262:	ca 01       	movw	r24, r20
 264:	fc 01       	movw	r30, r24
 266:	97 ff       	sbrs	r25, 7
 268:	03 c0       	rjmp	.+6      	; 0x270 <main+0x108>
 26a:	f0 95       	com	r31
 26c:	e1 95       	neg	r30
 26e:	ff 4f       	sbci	r31, 0xFF	; 255
 270:	cf 01       	movw	r24, r30
 272:	64 e6       	ldi	r22, 0x64	; 100
 274:	70 e0       	ldi	r23, 0x00	; 0
 276:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__divmodhi4>
 27a:	9c 01       	movw	r18, r24
 27c:	6a e0       	ldi	r22, 0x0A	; 10
 27e:	70 e0       	ldi	r23, 0x00	; 0
 280:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__divmodhi4>
 284:	90 93 7e 00 	sts	0x007E, r25
 288:	80 93 7d 00 	sts	0x007D, r24
	p2 = (abs(i) - abs(i)/100*100)/10;
 28c:	c9 01       	movw	r24, r18
 28e:	6a e0       	ldi	r22, 0x0A	; 10
 290:	70 e0       	ldi	r23, 0x00	; 0
 292:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__divmodhi4>
 296:	70 93 7a 00 	sts	0x007A, r23
 29a:	60 93 79 00 	sts	0x0079, r22
	p3 = abs(i)/100;
 29e:	cf 01       	movw	r24, r30
 2a0:	64 e6       	ldi	r22, 0x64	; 100
 2a2:	70 e0       	ldi	r23, 0x00	; 0
 2a4:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__divmodhi4>
 2a8:	70 93 9d 00 	sts	0x009D, r23
 2ac:	60 93 9c 00 	sts	0x009C, r22
 2b0:	cd cf       	rjmp	.-102    	; 0x24c <main+0xe4>
	p4 = 0;
}else if(abs(i) < 10000)
 2b2:	21 5f       	subi	r18, 0xF1	; 241
 2b4:	38 4d       	sbci	r19, 0xD8	; 216
 2b6:	2f 51       	subi	r18, 0x1F	; 31
 2b8:	3e 44       	sbci	r19, 0x4E	; 78
 2ba:	b8 f5       	brcc	.+110    	; 0x32a <main+0x1c2>
{
	p1 = (((abs(i) - abs(i)/1000*1000) - (abs(i) - abs(i)/1000*1000)/100*100) - ((abs(i) - abs(i)/1000*1000) - (abs(i) - abs(i)/1000*1000)/100*100)/10*10);
 2bc:	ca 01       	movw	r24, r20
 2be:	ec 01       	movw	r28, r24
 2c0:	97 ff       	sbrs	r25, 7
 2c2:	03 c0       	rjmp	.+6      	; 0x2ca <main+0x162>
 2c4:	d0 95       	com	r29
 2c6:	c1 95       	neg	r28
 2c8:	df 4f       	sbci	r29, 0xFF	; 255
 2ca:	ce 01       	movw	r24, r28
 2cc:	68 ee       	ldi	r22, 0xE8	; 232
 2ce:	73 e0       	ldi	r23, 0x03	; 3
 2d0:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__divmodhi4>
 2d4:	48 2f       	mov	r20, r24
 2d6:	e9 2f       	mov	r30, r25
 2d8:	64 e6       	ldi	r22, 0x64	; 100
 2da:	70 e0       	ldi	r23, 0x00	; 0
 2dc:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__divmodhi4>
 2e0:	9c 01       	movw	r18, r24
 2e2:	6a e0       	ldi	r22, 0x0A	; 10
 2e4:	70 e0       	ldi	r23, 0x00	; 0
 2e6:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__divmodhi4>
 2ea:	90 93 7e 00 	sts	0x007E, r25
 2ee:	80 93 7d 00 	sts	0x007D, r24
	p2 = ((abs(i) - abs(i)/1000*1000) - (abs(i) - abs(i)/1000*1000)/100*100)/10;
 2f2:	c9 01       	movw	r24, r18
 2f4:	6a e0       	ldi	r22, 0x0A	; 10
 2f6:	70 e0       	ldi	r23, 0x00	; 0
 2f8:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__divmodhi4>
 2fc:	70 93 7a 00 	sts	0x007A, r23
 300:	60 93 79 00 	sts	0x0079, r22
	p3 = (abs(i) - abs(i)/1000*1000)/100;
 304:	84 2f       	mov	r24, r20
 306:	9e 2f       	mov	r25, r30
 308:	64 e6       	ldi	r22, 0x64	; 100
 30a:	70 e0       	ldi	r23, 0x00	; 0
 30c:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__divmodhi4>
 310:	70 93 9d 00 	sts	0x009D, r23
 314:	60 93 9c 00 	sts	0x009C, r22
	p4 = abs(i)/1000;
 318:	ce 01       	movw	r24, r28
 31a:	68 ee       	ldi	r22, 0xE8	; 232
 31c:	73 e0       	ldi	r23, 0x03	; 3
 31e:	0e 94 e5 01 	call	0x3ca	; 0x3ca <__divmodhi4>
 322:	70 93 9f 00 	sts	0x009F, r23
 326:	60 93 9e 00 	sts	0x009E, r22
}

pp1 = &p1;
 32a:	f0 92 80 00 	sts	0x0080, r15
 32e:	e0 92 7f 00 	sts	0x007F, r14
			pp2 = &p2;
 332:	90 92 82 00 	sts	0x0082, r9
 336:	80 92 81 00 	sts	0x0081, r8
			pp3 = &p3;
 33a:	b0 92 7c 00 	sts	0x007C, r11
 33e:	a0 92 7b 00 	sts	0x007B, r10
			pp4 = &p4;
 342:	d0 92 9b 00 	sts	0x009B, r13
 346:	c0 92 9a 00 	sts	0x009A, r12
		}
		proces2(pp2);
*/


	wyswietl(pp1);
 34a:	c7 01       	movw	r24, r14
 34c:	0e 94 72 00 	call	0xe4	; 0xe4 <wyswietl>
	

	PORTD &= ~_BV(PORTD4);
 350:	94 98       	cbi	0x12, 4	; 18
 352:	c8 01       	movw	r24, r16
 354:	01 97       	sbiw	r24, 0x01	; 1
 356:	f1 f7       	brne	.-4      	; 0x354 <main+0x1ec>
	_delay_ms(1);	
	PORTD |= _BV(PORTD4);
 358:	94 9a       	sbi	0x12, 4	; 18
	
	wyswietl(pp2);
 35a:	80 91 81 00 	lds	r24, 0x0081
 35e:	90 91 82 00 	lds	r25, 0x0082
 362:	0e 94 72 00 	call	0xe4	; 0xe4 <wyswietl>
	PORTD &= ~_BV(PORTD5);
 366:	95 98       	cbi	0x12, 5	; 18
 368:	c8 01       	movw	r24, r16
 36a:	01 97       	sbiw	r24, 0x01	; 1
 36c:	f1 f7       	brne	.-4      	; 0x36a <main+0x202>
	_delay_ms(1);
	PORTD |= _BV(PORTD5);
 36e:	95 9a       	sbi	0x12, 5	; 18
	
	wyswietl(pp3);
 370:	80 91 7b 00 	lds	r24, 0x007B
 374:	90 91 7c 00 	lds	r25, 0x007C
 378:	0e 94 72 00 	call	0xe4	; 0xe4 <wyswietl>
	PORTD &= ~_BV(PORTD6);
 37c:	96 98       	cbi	0x12, 6	; 18
 37e:	c8 01       	movw	r24, r16
 380:	01 97       	sbiw	r24, 0x01	; 1
 382:	f1 f7       	brne	.-4      	; 0x380 <main+0x218>
	_delay_ms(1);
	PORTD |= _BV(PORTD6);
 384:	96 9a       	sbi	0x12, 6	; 18
	wyswietl(pp4);
 386:	80 91 9a 00 	lds	r24, 0x009A
 38a:	90 91 9b 00 	lds	r25, 0x009B
 38e:	0e 94 72 00 	call	0xe4	; 0xe4 <wyswietl>
	PORTD &= ~_BV(PORTD7);
 392:	97 98       	cbi	0x12, 7	; 18
 394:	c8 01       	movw	r24, r16
 396:	01 97       	sbiw	r24, 0x01	; 1
 398:	f1 f7       	brne	.-4      	; 0x396 <main+0x22e>
	_delay_ms(1);
	PORTD |= _BV(PORTD7);
 39a:	97 9a       	sbi	0x12, 7	; 18
 39c:	14 cf       	rjmp	.-472    	; 0x1c6 <main+0x5e>

0000039e <proces1>:
}

void proces1(int* p)
{
		//PORTD |= _BV(PORTD5);	
		wyswietl(p);
 39e:	0e 94 72 00 	call	0xe4	; 0xe4 <wyswietl>
		PORTD &= ~_BV(PORTD4);
 3a2:	94 98       	cbi	0x12, 4	; 18
 3a4:	88 ec       	ldi	r24, 0xC8	; 200
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	01 97       	sbiw	r24, 0x01	; 1
 3aa:	f1 f7       	brne	.-4      	; 0x3a8 <proces1+0xa>
		_delay_ms(0.1);
		
}
 3ac:	08 95       	ret

000003ae <proces2>:

void proces2(int* p)
{
	PORTD |= _BV(PORTD4);
 3ae:	94 9a       	sbi	0x12, 4	; 18
	wyswietl(p);
 3b0:	0e 94 72 00 	call	0xe4	; 0xe4 <wyswietl>
	PORTD &= ~_BV(PORTD5);	
 3b4:	95 98       	cbi	0x12, 5	; 18
 3b6:	88 ec       	ldi	r24, 0xC8	; 200
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	01 97       	sbiw	r24, 0x01	; 1
 3bc:	f1 f7       	brne	.-4      	; 0x3ba <proces2+0xc>
	_delay_ms(0.1);

	longjmp(bufor1, 1);
 3be:	83 e8       	ldi	r24, 0x83	; 131
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	61 e0       	ldi	r22, 0x01	; 1
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	0e 94 2c 02 	call	0x458	; 0x458 <longjmp>

000003ca <__divmodhi4>:
 3ca:	97 fb       	bst	r25, 7
 3cc:	09 2e       	mov	r0, r25
 3ce:	07 26       	eor	r0, r23
 3d0:	0a d0       	rcall	.+20     	; 0x3e6 <__divmodhi4_neg1>
 3d2:	77 fd       	sbrc	r23, 7
 3d4:	04 d0       	rcall	.+8      	; 0x3de <__divmodhi4_neg2>
 3d6:	0c d0       	rcall	.+24     	; 0x3f0 <__udivmodhi4>
 3d8:	06 d0       	rcall	.+12     	; 0x3e6 <__divmodhi4_neg1>
 3da:	00 20       	and	r0, r0
 3dc:	1a f4       	brpl	.+6      	; 0x3e4 <__divmodhi4_exit>

000003de <__divmodhi4_neg2>:
 3de:	70 95       	com	r23
 3e0:	61 95       	neg	r22
 3e2:	7f 4f       	sbci	r23, 0xFF	; 255

000003e4 <__divmodhi4_exit>:
 3e4:	08 95       	ret

000003e6 <__divmodhi4_neg1>:
 3e6:	f6 f7       	brtc	.-4      	; 0x3e4 <__divmodhi4_exit>
 3e8:	90 95       	com	r25
 3ea:	81 95       	neg	r24
 3ec:	9f 4f       	sbci	r25, 0xFF	; 255
 3ee:	08 95       	ret

000003f0 <__udivmodhi4>:
 3f0:	aa 1b       	sub	r26, r26
 3f2:	bb 1b       	sub	r27, r27
 3f4:	51 e1       	ldi	r21, 0x11	; 17
 3f6:	07 c0       	rjmp	.+14     	; 0x406 <__udivmodhi4_ep>

000003f8 <__udivmodhi4_loop>:
 3f8:	aa 1f       	adc	r26, r26
 3fa:	bb 1f       	adc	r27, r27
 3fc:	a6 17       	cp	r26, r22
 3fe:	b7 07       	cpc	r27, r23
 400:	10 f0       	brcs	.+4      	; 0x406 <__udivmodhi4_ep>
 402:	a6 1b       	sub	r26, r22
 404:	b7 0b       	sbc	r27, r23

00000406 <__udivmodhi4_ep>:
 406:	88 1f       	adc	r24, r24
 408:	99 1f       	adc	r25, r25
 40a:	5a 95       	dec	r21
 40c:	a9 f7       	brne	.-22     	; 0x3f8 <__udivmodhi4_loop>
 40e:	80 95       	com	r24
 410:	90 95       	com	r25
 412:	bc 01       	movw	r22, r24
 414:	cd 01       	movw	r24, r26
 416:	08 95       	ret

00000418 <setjmp>:
 418:	dc 01       	movw	r26, r24
 41a:	2d 92       	st	X+, r2
 41c:	3d 92       	st	X+, r3
 41e:	4d 92       	st	X+, r4
 420:	5d 92       	st	X+, r5
 422:	6d 92       	st	X+, r6
 424:	7d 92       	st	X+, r7
 426:	8d 92       	st	X+, r8
 428:	9d 92       	st	X+, r9
 42a:	ad 92       	st	X+, r10
 42c:	bd 92       	st	X+, r11
 42e:	cd 92       	st	X+, r12
 430:	dd 92       	st	X+, r13
 432:	ed 92       	st	X+, r14
 434:	fd 92       	st	X+, r15
 436:	0d 93       	st	X+, r16
 438:	1d 93       	st	X+, r17
 43a:	cd 93       	st	X+, r28
 43c:	dd 93       	st	X+, r29
 43e:	ff 91       	pop	r31
 440:	ef 91       	pop	r30
 442:	8d b7       	in	r24, 0x3d	; 61
 444:	8d 93       	st	X+, r24
 446:	8e b7       	in	r24, 0x3e	; 62
 448:	8d 93       	st	X+, r24
 44a:	8f b7       	in	r24, 0x3f	; 63
 44c:	8d 93       	st	X+, r24
 44e:	ed 93       	st	X+, r30
 450:	fd 93       	st	X+, r31
 452:	88 27       	eor	r24, r24
 454:	99 27       	eor	r25, r25
 456:	09 94       	ijmp

00000458 <longjmp>:
 458:	dc 01       	movw	r26, r24
 45a:	cb 01       	movw	r24, r22
 45c:	81 30       	cpi	r24, 0x01	; 1
 45e:	91 05       	cpc	r25, r1
 460:	81 1d       	adc	r24, r1
 462:	2d 90       	ld	r2, X+
 464:	3d 90       	ld	r3, X+
 466:	4d 90       	ld	r4, X+
 468:	5d 90       	ld	r5, X+
 46a:	6d 90       	ld	r6, X+
 46c:	7d 90       	ld	r7, X+
 46e:	8d 90       	ld	r8, X+
 470:	9d 90       	ld	r9, X+
 472:	ad 90       	ld	r10, X+
 474:	bd 90       	ld	r11, X+
 476:	cd 90       	ld	r12, X+
 478:	dd 90       	ld	r13, X+
 47a:	ed 90       	ld	r14, X+
 47c:	fd 90       	ld	r15, X+
 47e:	0d 91       	ld	r16, X+
 480:	1d 91       	ld	r17, X+
 482:	cd 91       	ld	r28, X+
 484:	dd 91       	ld	r29, X+
 486:	ed 91       	ld	r30, X+
 488:	fd 91       	ld	r31, X+
 48a:	0d 90       	ld	r0, X+
 48c:	f8 94       	cli
 48e:	fe bf       	out	0x3e, r31	; 62
 490:	0f be       	out	0x3f, r0	; 63
 492:	ed bf       	out	0x3d, r30	; 61
 494:	ed 91       	ld	r30, X+
 496:	fd 91       	ld	r31, X+
 498:	09 94       	ijmp

0000049a <_exit>:
 49a:	f8 94       	cli

0000049c <__stop_program>:
 49c:	ff cf       	rjmp	.-2      	; 0x49c <__stop_program>
